import React, { Component } from "react";
import List from "./List";
import Items from "./Items";
import "./Styles/Main.css";

class Main extends Component {
  constructor(props) {
    super(props);
    this.state = {
      categories: [], //list of category
      selectedPrice: "0-50", //selected price by user
      items: [], //list of items(max:20) based on category
    };
    this.getEachCategory = this.getEachCategory.bind(this);
    this.getCategories = this.getCategories.bind(this);
    this.filterList = this.filterList.bind(this);
  }
  async filterList(_state, _value) { //function to update state in this component from child component
    await this.setState({ [_state]: _value });
  }
  async getEachCategory(id) { //get items based on category selected
    const { selectedPrice } = this.state;
    await fetch(
      `https://apis.aspenku.com/api/v1/product?limit=1000&skip=0&subCategory=${id}`,
      {
        method: "GET",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
          Authorization: "Basic QXNwZW5rdTpBc3Blbmt1",
        },
      }
    )
      .then((response) => response.json())
      .then(async (responseJson) => {
        const result = responseJson.data.rows;
        const priceLowest = selectedPrice.split("-")[0];
        const priceHighest = selectedPrice.split("-")[1];
        let newResult = [];
        for (let i = 0; i < result.length; i++) { //filter the price of the items based on selected price
          if (
            parseInt(result[i].sell_price) >= priceLowest &&
            parseInt(result[i].sell_price) < priceHighest
          )
            newResult.push(result[i]);

          if (newResult.length >= 20) break; //stop the search if items is already 20
        }
        await this.setState({ items: newResult });
      });
  }

  async getCategories() { //get category
    await fetch(`https://apis.aspenku.com/api/v1/category?subCategory=true`, {
      method: "GET",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
        Authorization: "Basic QXNwZW5rdTpBc3Blbmt1",
      },
    })
      .then((response) => response.json())
      .then(async (responseJson) => {
        const category = responseJson.data.rows;
        const tempResult = [];
        for (let i = 0; i < category.length; i++) {
          const subCategory = category[i].SpreeSubCategories;
          for (let j = 0; j < subCategory.length; j++) { //select spesific category
            const catId = subCategory[j].id;
            if (
              catId === 113 ||
              catId === 119 ||
              catId === 140 ||
              catId === 141 ||
              catId === 143 ||
              catId === 144
            ) {
              tempResult.push(subCategory[j]);
            }
          }
        }
        this.setState({ categories: tempResult });
      });
  }

  render() {
    const { categories, items, selectedPrice } = this.state;
    return (
      <div className="main-wrapper">
        <List
          getCategories={this.getCategories}
          getEachCategory={this.getEachCategory}
          categories={categories}
          selectedPrice={selectedPrice}
          filterList={this.filterList}
        />
        <Items items={items} />
      </div>
    );
  }
}

export default Main;
